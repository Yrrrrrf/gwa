# GWA Docker Compose

# Define common environment variables
x-common-env: &common-env
  DB_NAME: ${DB_NAME:-gwa}
  DB_OWNER_ADMIN: ${DB_OWNER_ADMIN:-gwa_owner}
  DB_OWNER_PWORD: ${DB_OWNER_PWORD:-password}

services:
  db:
    build:
      context: ./server/db/
      dockerfile: db.Dockerfile
    container_name: gwa-db
    environment:
      <<: *common-env # Include all common variables
      # PostgreSQL-specific variables
      POSTGRES_DB: ${DB_NAME:-gwa}
      POSTGRES_USER: ${DB_OWNER_ADMIN:-gwa_owner}
      POSTGRES_PASSWORD: ${DB_OWNER_PWORD:-password}
      TZ: UTC
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gwa-network
    healthcheck:
      test: [
        "CMD-SHELL",
        "pg_isready -U ${DB_OWNER_ADMIN:-gwa_owner} -d ${DB_NAME:-gwa}",
      ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  api:
    build:
      context: ./server/api/
      dockerfile: api.Dockerfile
    container_name: gwa-api
    environment:
      <<: *common-env # Include all common variables
      DB_HOST: gwa-db
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
    ports:
      - "8000:8000"
    volumes:
      - ./server/api:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - gwa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s # Reduced from 30s
      timeout: 5s # Reduced from 10s
      retries: 5 # Increased from 3
      start_period: 5s # Reduced from 10s

  app:
    build:
      context: ./generic-app  # Sets build context to generic-app directory
      dockerfile: app.Dockerfile
    container_name: gwa-app
    ports:
      - "1420:1420"
    depends_on:
      - db
      - api
    networks:
      - gwa-network

networks:
  gwa-network:
    name: gwa-network
    driver: bridge

volumes:
  postgres_data:
    name: gwa-postgres-data
